<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Deg.Alt.UnityAutoWire</name>
    </assembly>
    <members>
        <member name="T:Deg.Alt.UnityAutoWire.UnityExtensions">
            <summary>
            UnityExtensions
            </summary>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.UnityExtensions.Using``1(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Usings the specified container.
            </summary>
            <typeparam name="TType">The type of the type.</typeparam>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="T:Deg.Alt.UnityAutoWire.ImplementationToInterfaceRegistrar">
            <summary>
            Registers interfaces by conventions
            </summary>
        </member>
        <member name="T:Deg.Alt.UnityAutoWire.IImplementationToInterfaceRegistrar">
            <summary>
            IImplementationToInterfaceRegistrar
            </summary>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.IImplementationToInterfaceRegistrar.RegisterAllMatchingImplementations``1(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers all matching implementations of matching type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.IImplementationToInterfaceRegistrar.RegisterAllMatchingImplementations(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers all implementations of interfaces.
            </summary>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.IImplementationToInterfaceRegistrar.RegisterImplementationsWithMatchingNames(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers only matches between names of implementations and interfaces (i.e. IFoo and Foo).
            </summary>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.ImplementationToInterfaceRegistrar.RegisterImplementationsWithMatchingNames(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers only matches between names of implementations and interfaces (i.e. IFoo and Foo).
            </summary>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.ImplementationToInterfaceRegistrar.RegisterAllMatchingImplementations(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers all implementations of interfaces.
            </summary>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
        <member name="M:Deg.Alt.UnityAutoWire.ImplementationToInterfaceRegistrar.RegisterAllMatchingImplementations``1(Microsoft.Practices.Unity.IUnityContainer,System.Reflection.Assembly)">
            <summary>
            Registers all matching implementations of matching type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="container">The container in which to register the interface/implementation matches.</param>
            <param name="assembly">The assembly in which to scan for matches.</param>
        </member>
    </members>
</doc>
