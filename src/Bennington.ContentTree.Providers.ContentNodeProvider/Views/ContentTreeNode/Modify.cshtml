@using System.Web.Mvc.Html
@using Bennington.ContentTree.Providers.ContentNodeProvider.Models
@model Bennington.ContentTree.Providers.ContentNodeProvider.Models.ModifyViewModel
@using System.Web.Mvc
@using System.Security.Policy
@using Bennington.Core
@using MvcTurbine.ComponentModel
@using Bennington.Cms.PrincipalProvider.Repositories

@{    
    var currentPrincipal = ServiceLocatorManager.Current.Resolve<ICurrentUserContext>().GetCurrentPrincipal();
    var userRepository = ServiceLocatorManager.Current.Resolve<IUserRepository>();
    var user = userRepository.GetAll().FirstOrDefault(x => x.Username == currentPrincipal.Identity.Name);    
}
@{ Html.RenderAction("ContentItemNavigation", "ContentTreeNode", new { TreeNodeId = Model.ContentTreeNodeInputModel.TreeNodeId }); }

	@*<% using (Html.BeginForm(Model.Action, "ContentTreeNode", FormMethod.Post, new { Id = "form" })) { %>*@
	<form Id="form" action="@Url.Content("~/")ContentTreeNode/@Model.Action" method="post" enctype="multipart/form-data">

	<div class="contentNodeProviderForm">

        @if (!string.IsNullOrEmpty(Model.Url))
        {
            <div><a href="@Html.Raw(Model.Url)" target="_blank">@Model.Url</a></div>
        }
            
		@Html.EditorFor(x => x.ContentTreeNodeInputModel)

		<div class="commandButtonContainer">
			<input type="button" class="button" value="Cancel" onclick="window.location='@Url.Action("Index", "ContentTree")';" />
			<input type="button" class="button" value="Save" onclick="$('#ContentTreeNodeInputModel_FormAction').val(this.value);/*tinyMCE.triggerSave();*/$('#form').submit();" />
			@*<input type="button" class="button" value="Save And Exit" onclick="$('#ContentTreeNodeInputModel_FormAction').val(this.value);/*tinyMCE.triggerSave();*/$('#form').submit();" />*@
			
			@if (ViewContext.RouteData.Values["Action"].ToString() == "Modify") { 
			<input type="button" class="button important" value="Delete" onclick="if (confirm('Are you sure you want to delete this item?')) { window.location='@Url.Action("Delete", "ContentTreeNode", new { treeNodeId = Model.ContentTreeNodeInputModel.TreeNodeId })'; }" />
			 } 
			@if ((ViewContext.RouteData.Values["Action"].ToString() == "Modify") && (!string.IsNullOrEmpty(Model.ContentTreeNodeInputModel.PageId)) && user.UserType == "Publisher")
            { 
			<input type="button" class="button" value="Publish" onclick="$('#ContentTreeNodeInputModel_FormAction').val(this.value);$('#form').submit();" />
            <input type="button" class="button" value="Publish and Exit" onclick="$('#ContentTreeNodeInputModel_FormAction').val(this.value);$('#form').submit();" />
            } 
		</div>
	</div>

	</form>
	@*<% } %>*@


