@using PagedList.Mvc
@using PagedList
@using Bennington.Cms.Helpers
@model Bennington.Cms.Models.GridViewModel

@{
    var pageListRenderOptions = PagedListRenderOptions.PageNumbersOnly;
    pageListRenderOptions.DisplayLinkToIndividualPages = true;
    pageListRenderOptions.FunctionToDisplayEachPageNumber = (p) =>
                                          {
                                              return ((IPagedList)Model.Items)
                                                  .GetPageRange(p - 1)
                                                  .ToString();
                                          };
}

<div id="pageheader" class="clearfix">
    <div class="title">
        <h2>@Model.Title</h2>  
        @if (!string.IsNullOrEmpty(Model.Subtitle))
        {
            <p class="meta">@Model.Subtitle</p>
        }
    </div>    
    @Html.EditorFor(model => model.SearchByOptions)  
</div>
@if (Model.TopRightButtons != null && Model.TopRightButtons.Any())
{
    <div class="section list-actions">
        @Html.DisplayFor(model => model.TopRightButtons)
    </div>
}
<div class="section">
    @if (Model.ViewingAll == true)
    {
       <a href="?page=0" class="page-view-option">View by Page</a>
    }
    else if (Model.Items.TotalItemCount > Model.Items.PageSize)
    {
        <a href="?page=-1" class="page-view-option">View All</a>  
        
                  

            @Html.PagedListPager(Model.Items, page => "?page=" + page, pageListRenderOptions)
       
        <div class="iterative-paging">
        @Html.PagedListPager(Model.Items, page => "?page=" + page, PagedListRenderOptions.Minimal)   
        </div>
    }
</div>
